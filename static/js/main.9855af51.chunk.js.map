{"version":3,"sources":["components/Nav.jsx","components/weatherDisplayer.jsx","App.js","reducers/weatherReducer.js","reportWebVitals.js","index.js"],"names":["Nav","type","WeatherDisplayer","App","State","currentWeather","weatherForecast","isLoading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJAAaA,EAAM,WACf,OACI,8BACI,iCACI,uBAAOC,KAAK,SACZ,iDCLHC,EAAmB,WAC5B,OACI,kCACI,gDCSGC,MATf,WACE,OACE,oCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,OCPAC,EAAQ,CACVC,eAAe,GACfC,gBAAgB,GAChBC,WAAU,GCSCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCGRQ,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,aFNgB,WAA0B,IAAzBC,EAAwB,uDAAlBnB,EAAOoB,EAAW,uCACnD,OAAQA,EAAOvB,MACX,IAAK,cAEL,QACI,OAAO,eAAIsB,MECoBN,EAAiBQ,YAAgBC,OAE5EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGNS,SAASC,eAAe,SAMxBvB,M","file":"static/js/main.9855af51.chunk.js","sourcesContent":["export const Nav = () => {\n    return(\n        <nav>\n            <form>\n                <input type=\"text\" />\n                <button>Click</button>\n            </form>\n        </nav>\n    )\n}","export const WeatherDisplayer = () => {\n    return(\n        <section>\n            <h1>Hello World</h1>\n        </section>\n    )\n}","import {Nav} from \"./components/Nav\"\nimport {WeatherDisplayer} from \"./components/weatherDisplayer\"\n\nfunction App() {\n  return (\n    <section>\n      <Nav/>\n      <WeatherDisplayer/>\n    </section>\n  );\n}\n\nexport default App;\n","const State = {\n    currentWeather:[],\n    weatherForecast:[],\n    isLoading:true\n}\n\nexport const weatherReducer = (state=State, action) => {\n    switch (action.type){\n        case \"FETCH_GAMES\":\n            return {...state}\n        default:\n            return {...state}\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {weatherReducer} from './reducers/weatherReducer'\nimport reportWebVitals from './reportWebVitals';\n//REDUX\nimport {Provider} from \"react-redux\"\nimport {createStore, applyMiddleware, compose} from \"redux\"\nimport thunk from \"redux-thunk\" \n\nconst composeEnchancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(weatherReducer , composeEnchancer(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}